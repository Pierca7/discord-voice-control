diff --git a/node_modules/websocket-stream/index.d.ts b/node_modules/websocket-stream/index.d.ts
index 691351b..b33543a 100644
--- a/node_modules/websocket-stream/index.d.ts
+++ b/node_modules/websocket-stream/index.d.ts
@@ -10,12 +10,12 @@ declare namespace WebSocketStream {
   type WebSocketDuplex = Duplex & { socket: WebSocket };
 
   class Server extends WebSocket.Server {
-    on(event: 'connection', cb: (this: WebSocket, socket: WebSocket, request: http.IncomingMessage) => void): this;
-    on(event: 'error', cb: (this: WebSocket, error: Error) => void): this;
-    on(event: 'headers', cb: (this: WebSocket, headers: string[], request: http.IncomingMessage) => void): this;
-    on(event: 'listening', cb: (this: WebSocket) => void): this;
-    on(event: 'stream', cb: (this: WebSocket, stream: WebSocketDuplex, request: http.IncomingMessage) => void): this;
-    on(event: string | symbol, listener: (this: WebSocket, ...args: any[]) => void): this;
+    on(event: 'connection', cb: (this: WebSocket.Server, socket: WebSocket, request: http.IncomingMessage) => void): this;
+    on(event: 'error', cb: (this: WebSocket.Server, error: Error) => void): this;
+    on(event: 'headers', cb: (this: WebSocket.Server, headers: string[], request: http.IncomingMessage) => void): this;
+    on(event: 'listening', cb: (this: WebSocket.Server) => void): this;
+    on(event: 'stream', cb: (this: WebSocket.Server, stream: WebSocketDuplex, request: http.IncomingMessage) => void): this;
+    on(event: string | symbol, listener: (this: WebSocket.Server, ...args: any[]) => void): this;
   }
 
   function createServer(opts?: WebSocket.ServerOptions, callback?: () => void): Server;
